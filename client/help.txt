white-space: nowrap; =text-nowrap
//hen applied to an element, any text inside it will remain on a single continuous line, even if it exceeds the width of its container




 <tr key ={index} className='border-b 
              border-[var(--color-primary)]/20 bg-[var(--color-primary)]/5
              even:bg-[var(--color-primary)]/10'>

:root {
  --color-primary-rgb: 59, 130, 246;
}

.data-table > tbody > tr {
  background-color: rgba(var(--color-primary-rgb), 0.05);
  border-bottom-width: 1px;
  border-bottom-style: solid;
  border-bottom-color: rgba(var(--color-primary-rgb), 0.2);
}

.data-table > tbody > tr:nth-child(even) {
  background-color: rgba(var(--color-primary-rgb), 0.1);
}


[var(--color-primary)]


.my-element {
  display: block;
} "block" always starts from new line 




<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Show Price Input</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>

  <div class="container">
    <label class="label">Show price</label>
    <div class="input-wrapper">
      <p class="currency-label" id="currency">₹</p>
      <input type="number" min="0" placeholder="Enter show price" id="price-input" class="price-input" />
    </div>
    <p id="output" class="output"></p>
  </div>

  <script src="script.js"></script>
</body>
</html>


body {
  font-family: sans-serif;
  padding: 2rem;
}

.container {
  margin-top: 2rem;
}

.label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
}

.input-wrapper {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  border: 1px solid #4B5563;
  padding: 0.5rem 0.75rem;
  border-radius: 0.375rem;
}

.currency-label {
  color: #9CA3AF;
  font-size: 0.875rem;
  margin: 0;
}

.price-input {
  border: none;
  outline: none;
  font-size: 1rem;
}

.output {
  margin-top: 1rem;
  color: #333;
  font-weight: 500;
}



const priceInput = document.getElementById('price-input');
const output = document.getElementById('output');

priceInput.addEventListener('input', () => {
  const value = priceInput.value;
  output.textContent = value ? `Show price: ₹${value}` : '';
});

active:scale-110